# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: my-first-project

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch: 

env:
  CONFIGURATION: Release
  AZ_LOCATION: eastus
  AZ_APP_NAME: MyFirstProject
  
jobs:
  Infra:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create environment dev
      uses: Azure/arm-deploy@v1
      with:
        scope: subscription
        region: ${{ env.AZ_LOCATION }}
        template: iac/main.bicep
        deploymentMode: Incremental
        deploymentName: 'gh-actions'
        parameters: webAppName=${{ env.AZ_APP_NAME }} location=${{ env.AZ_LOCATION }} environment=dev
    
    - name: Create environment prd
      uses: Azure/arm-deploy@v1
      with:
        scope: subscription
        region: ${{ env.AZ_LOCATION }}
        template: iac/main.bicep
        deploymentMode: Incremental
        deploymentName: 'gh-actions'
        parameters: webAppName=${{ env.AZ_APP_NAME }} location=${{ env.AZ_LOCATION }} environment=prd

  Build:
    needs: Infra
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore src/MyFirstProject.sln
    
    - name: Build
      run: dotnet build src/MyFirstProject.sln --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Test
      run: dotnet test src/MyFirstProject.Tests/MyFirstProject.Tests.csproj --no-build --configuration ${{ env.CONFIGURATION }} --verbosity normal --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: UnitTests
        path: src/MyFirstProject.Tests/TestResults/*.trx
        reporter: dotnet-trx
        
    - name: Publish APP
      run: dotnet publish src/MyFirstProject.WebApp/MyFirstProject.WebApp.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishApp

    - name: Publish API
      run: dotnet publish src/MyFirstProject.WebApi/MyFirstProject.WebApi.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishApi

    - name: Upload APP Artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-artifact
        path: PublishApp
    
    - name: Upload API Artifact
      uses: actions/upload-artifact@v3
      with:
        name: api-artifact
        path: PublishApi
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: '1.0.0'
        release_name: 'Release 1.0.0'
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
  
  Dev:
    needs: Build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/download-artifact@v3
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy API
        uses: azure/webapps-deploy@v3
        with:
          app-name: api-myfirstproject-dev
          package: api-artifact
        
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: app-myfirstproject-dev
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              }
            ]

      - name: Deploy APP
        uses: azure/webapps-deploy@v3
        with:
          app-name: app-myfirstproject-dev
          package: app-artifact
  Prd:
    needs: Dev
    runs-on: ubuntu-latest
    environment: prd
    steps:
      - uses: actions/download-artifact@v3
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy API
        uses: azure/webapps-deploy@v3
        with:
          app-name: api-myfirstproject-prd
          package: api-artifact
        
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: app-myfirstproject-prd
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              }
            ]

      - name: Deploy APP
        uses: azure/webapps-deploy@v3
        with:
          app-name: app-myfirstproject-prd
          package: app-artifact
