name: dotnetcore-webapp-ci-cd-apim

on:
  # push:
  #   branches:
  #     - feature/*
  #     - release/*
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch: 

permissions:
  pull-requests: write
  contents: write
  statuses: write
  checks: write
  actions: write    
  security-events: write
  
env:
  CONFIGURATION: Release
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup dotnet version
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore src/MyFirstProject.sln
    
    - name: Build
      run: dotnet build src/MyFirstProject.sln --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Test
      run: dotnet test src/MyFirstProject.Tests/MyFirstProject.Tests.csproj --no-build --configuration ${{ env.CONFIGURATION }} --verbosity normal --logger "junit;LogFilePath=TestResults/tests.xml"
    
    - name: Publish MyFirstProject.WebApp.csproj
      run: dotnet publish src/MyFirstProject.WebApp/MyFirstProject.WebApp.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishApp

    - name: Publish MyFirstProject.TodoApi
      run: dotnet publish src/MyFirstProject.TodoApi/MyFirstProject.TodoApi.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishTodoApi
    
    - name: Publish MyFirstProject.WeatherForecastApi
      run: dotnet publish src/MyFirstProject.WeatherForecastApi/MyFirstProject.WeatherForecastApi.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishWeatherForecastApi
    
    - name: Generate TodoApi Swagger JSON
      run: |
        export ASPNETCORE_ENVIRONMENT=Development
        dotnet src/MyFirstProject.TodoApi/bin/${{ env.CONFIGURATION }}/net8.0/MyFirstProject.TodoApi.dll &
        APP_PID=$!
        sleep 5
        curl http://localhost:5000/swagger/v1/swagger.json --output todoapi-swagger.json
        kill $APP_PID
    
    - name: Generate WeatherForecastApi Swagger JSON
      run: |
        export ASPNETCORE_ENVIRONMENT=Development
        dotnet src/MyFirstProject.WeatherForecastApi/bin/${{ env.CONFIGURATION }}/net8.0/MyFirstProject.WeatherForecastApi.dll &
        APP_PID=$!
        sleep 5
        curl http://localhost:5000/swagger/v1/swagger.json --output weatherforecastapi-swagger.json
        kill $APP_PID

    - name: Zip WebApp
      run: |
        cd ${{ github.workspace }}/PublishApp
        zip -r PublishApp.zip .
    
    - name: Zip TodoApi
      run: |
        cd ${{ github.workspace }}/PublishTodoApi
        zip -r PublishTodoApi.zip .
    
    - name: Zip WeatherForecastApi
      run: |
        cd ${{ github.workspace }}/PublishWeatherForecastApi
        zip -r PublishWeatherForecastApi.zip .
      
    - name: Upload WebApp Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-artifact
        path: PublishApp/PublishApp.zip
    
    - name: Upload TodoApi Artifact
      uses: actions/upload-artifact@v4
      with:
        name: todo-api-artifact
        path: PublishTodoApi/PublishTodoApi.zip
    
    - name: Upload WeatherForecastApi Artifact
      uses: actions/upload-artifact@v4
      with:
        name: weather-api-artifact
        path: PublishWeatherForecastApi/PublishWeatherForecastApi.zip
    
    - name: Upload Swagger JSON
      uses: actions/upload-artifact@v4
      with:
        name: swagger-artifact
        path: |
          todoapi-swagger.json
          weatherforecastapi-swagger.json
      
  Dev:
    needs: 
      - Build
    runs-on: ubuntu-latest
    environment:
      name: webapp-dev
      url: https://app-dotnetproject-dev.azurewebsites.net
    env:
      AZ_RG_NAME: rg-dotnetproject-dev
      AZ_APIM_NAME: apim-dotnetproject-dev
    if: ${{ startsWith(github.ref, 'refs/heads/feature/') }}
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy TodoApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-dev
          app-name: api-todo-dev
          package: "todo-api-artifact/PublishTodoApi.zip"
      
      - name: Deploy WeatherForecastApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-dev
          app-name: api-weatherforecast-dev
          package: "weather-api-artifact/PublishWeatherForecastApi.zip"
    
      - name: Deploy WebApp
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-dev
          app-name: app-dotnetproject-dev
          package: "app-artifact/PublishApp.zip"
      
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: app-dotnetproject-dev
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Todo",
                "value": "https://api-todo-dev.azurewebsites.net",
                "slotSetting": false
              },
              {
                "name": "Api__WeatherForecast",
                "value": "https://api-weatherforecast-dev.azurewebsites.net",
                "slotSetting": false
              }
            ]

      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: api-todo-dev
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]
      
      - name: APIM - Publish todoapi Swagger
        run: |
          az apim api import --resource-group ${{ env.AZ_RG_NAME }} \
                            --service-name ${{ env.AZ_APIM_NAME }} \
                            --path todo \
                            --api-id todoapi \
                            --specification-path swagger-artifact/todoapi-swagger.json \
                            --specification-format OpenApi \
                            --service-url https://api-todo-dev.azurewebsites.net

      - name: APIM - Publish weatherforecastapi Swagger
        run: |
          az apim api import --resource-group ${{ env.AZ_RG_NAME }} \
                            --service-name ${{ env.AZ_APIM_NAME }} \
                            --path weatherforecast \
                            --api-id weatherforecastapi \
                            --specification-path swagger-artifact/weatherforecastapi-swagger.json \
                            --specification-format OpenApi \
                            --service-url https://api-weatherforecast-dev.azurewebsites.net

      - name: APIM - Create todoapi Subscription
        run: |
          az rest --method PUT \
                  --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/subscriptions/todoapi-subscription?api-version=2021-08-01" \
                  --body '{
                    "properties": {
                      "scope": "/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/apis/todoapi",
                      "displayName": "todoapi-subscription",
                      "state": "active"
                    }
                  }'
      
      - name: APIM - Create weatherforecastapi Subscription
        run: |
          az rest --method PUT \
                  --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/subscriptions/weatherforecastapi-subscription?api-version=2021-08-01" \
                  --body '{
                    "properties": {
                      "scope": "/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/apis/weatherforecastapi",
                      "displayName": "weatherforecastapi-subscription",
                      "state": "active"
                    }
                  }'