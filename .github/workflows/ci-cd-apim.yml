name: dotnetcore-webapp-ci-cd-apim1

on:
  #push:
  #  branches:
  #    - feature/*
  #    - release/*
  #    - develop
  #pull_request:
  #  branches:
  #    - develop
  #    - main
  workflow_dispatch: 

permissions:
  pull-requests: write
  contents: write
  statuses: write
  checks: write
  actions: write    
  security-events: write
  
env:
  CONFIGURATION: Release
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

    - name: Show variables
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_SHA: $GITHUB_SHA"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "GITHUB_ACTION: $GITHUB_ACTION"
        echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
        echo "RUNNER_OS: $RUNNER_OS"
        echo "RUNNER_TOOL_CACHE: $RUNNER_TOOL_CACHE"
        echo "RUNNER_TEMP: $RUNNER_TEMP"
        echo "RUNNER_WORKSPACE: $RUNNER_WORKSPACE"
        echo "ACTIONS_RUNTIME_URL: $ACTIONS_RUNTIME_URL"

    - name: Setup dotnet version
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
        #queries: security-extended,security-and-quality
        queries: security-extended

    - name: Restore dependencies
      run: dotnet restore src/MyFirstProject.sln
    
    - name: Build
      run: dotnet build src/MyFirstProject.sln --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Test
      run: dotnet test src/MyFirstProject.Tests/MyFirstProject.Tests.csproj --no-build --configuration ${{ env.CONFIGURATION }} --verbosity normal --logger "junit;LogFilePath=TestResults/tests.xml"
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:csharp"
    
    - name: Publish APP
      run: dotnet publish src/MyFirstProject.WebApp/MyFirstProject.WebApp.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishApp

    - name: Publish API
      run: dotnet publish src/MyFirstProject.WebApi/MyFirstProject.WebApi.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishApi
    
    - name: Run API and Generate Swagger JSON
      run: |
        export ASPNETCORE_ENVIRONMENT=Development
        dotnet src/MyFirstProject.WebApi/bin/${{ env.CONFIGURATION }}/net8.0/MyFirstProject.WebApi.dll &
        APP_PID=$!
        sleep 10
        curl http://localhost:5000/swagger/v1/swagger.json --output swagger.json
        kill $APP_PID
    
    - name: Zip APP
      run: |
        cd ${{ github.workspace }}/PublishApp
        zip -r PublishApp.zip .
    
    - name: Zip API
      run: |
        cd ${{ github.workspace }}/PublishApi
        zip -r PublishApi.zip .
        
    - name: Upload APP Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-artifact
        path: PublishApp/PublishApp.zip
    
    - name: Upload API Artifact
      uses: actions/upload-artifact@v4
      with:
        name: api-artifact
        path: PublishApi/PublishApi.zip
    
    - name: Upload Swagger JSON
      uses: actions/upload-artifact@v4
      with:
        name: swagger-artifact
        path: swagger.json
      
  Dev:
    needs: 
      - Build
    runs-on: ubuntu-latest
    environment:
      name: webapp-dev
      url: https://app-dotnetproject-dev.azurewebsites.net
    env:
      AZ_RG_NAME: 'rg-dotnetproject-dev'
      AZ_APIM_NAME: 'apim-dotnetproject-dev'
      AZ_API_NAME: 'api-dotnetproject-dev'
      AZ_APP_NAME: 'app-dotnetproject-dev'
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy API
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: ${{ env.AZ_RG_NAME }}
          app-name: ${{ env.AZ_API_NAME }}
          package: "api-artifact/PublishApi.zip"
      
      - name: Deploy APP
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: ${{ env.AZ_RG_NAME }}
          app-name: ${{ env.AZ_APP_NAME }}
          package: "app-artifact/PublishApp.zip"
      
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZ_APP_NAME }}
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Url",
                "value": "https://${{ env.AZ_API_NAME }}.azurewebsites.net",
                "slotSetting": false
              }
            ]

      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZ_API_NAME }}
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]
      
      - name: Publish Swagger to APIM
        run: |
          az apim api import --resource-group ${{ env.AZ_RG_NAME }} \
                           --service-name ${{ env.AZ_APIM_NAME }} \
                           --path myfirstproject-webapi \
                           --api-id myfirstproject-webapi \
                           --specification-path swagger-artifact/swagger.json \
                           --specification-format OpenApi \
                           --service-url https://${{ env.AZ_API_NAME }}.azurewebsites.net
      
      - name: Create APIM Subscription
        run: |
          az rest --method PUT \
                  --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/subscriptions/myfirstproject-subscription?api-version=2021-08-01" \
                  --body '{
                    "properties": {
                      "scope": "/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/apis/myfirstproject-webapi",
                      "displayName": "myfirstproject-subscription",
                      "state": "active"
                    }
                  }'
  
  Hml:
    needs: 
      - Dev
    runs-on: ubuntu-latest
    environment:
      name: webapp-hml
      url: https://app-dotnetproject-hml.azurewebsites.net
    env:
      AZ_RG_NAME: 'rg-dotnetproject-hml'
      AZ_APIM_NAME: 'apim-dotnetproject-hml'
      AZ_API_NAME: 'api-dotnetproject-hml'
      AZ_APP_NAME: 'app-dotnetproject-hml'
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy API
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-hml
          app-name: ${{ env.AZ_API_NAME }}
          package: api-artifact/PublishApi.zip
        
      - name: Deploy APP
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-hml
          app-name: ${{ env.AZ_APP_NAME }}
          package: app-artifact/PublishApp.zip
          
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZ_APP_NAME }}
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Url",
                "value": "https://${{ env.AZ_API_NAME }}.azurewebsites.net",
                "slotSetting": false
              }
            ]
      
      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZ_API_NAME }}
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]
      
      - name: Publish Swagger to APIM
        run: |
          az apim api import --resource-group ${{ env.AZ_RG_NAME }} \
                            --service-name ${{ env.AZ_APIM_NAME }} \
                            --path myfirstproject-webapi \
                            --api-id myfirstproject-webapi \
                            --specification-path swagger-artifact/swagger.json \
                            --specification-format OpenApi \
                            --service-url https://${{ env.AZ_API_NAME }}.azurewebsites.net
      
      - name: Create APIM Subscription
        run: |
          az rest --method PUT \
                  --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/subscriptions/myfirstproject-subscription?api-version=2021-08-01" \
                  --body '{
                    "properties": {
                      "scope": "/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/apis/myfirstproject-webapi",
                      "displayName": "myfirstproject-subscription",
                      "state": "active"
                    }
                  }'

  Prd:
    needs: 
      - Hml
    runs-on: ubuntu-latest
    environment:
      name: webapp-prd
      url: https://app-dotnetproject-prd.azurewebsites.net
    env:
      AZ_RG_NAME: 'rg-dotnetproject-prd'
      AZ_APIM_NAME: 'apim-dotnetproject-prd'
      AZ_API_NAME: 'api-dotnetproject-prd'
      AZ_APP_NAME: 'app-dotnetproject-prd'
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy API
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-prd
          app-name: ${{ env.AZ_API_NAME }}
          package: api-artifact/PublishApi.zip
        
      - name: Deploy APP
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-prd
          app-name: ${{ env.AZ_APP_NAME }}
          package: app-artifact/PublishApp.zip
          
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZ_APP_NAME }}
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Url",
                "value": "https://${{ env.AZ_API_NAME }}.azurewebsites.net",
                "slotSetting": false
              }
            ]

      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZ_API_NAME }}
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]
      
      - name: Publish Swagger to APIM
        run: |
          az apim api import --resource-group ${{ env.AZ_RG_NAME }} \
                            --service-name ${{ env.AZ_APIM_NAME }} \
                            --path myfirstproject-webapi \
                            --api-id myfirstproject-webapi \
                            --specification-path swagger-artifact/swagger.json \
                            --specification-format OpenApi \
                            --service-url https://${{ env.AZ_API_NAME }}.azurewebsites.net
      
      - name: Create APIM Subscription
        run: |
          az rest --method PUT \
                  --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/subscriptions/myfirstproject-subscription?api-version=2021-08-01" \
                  --body '{
                    "properties": {
                      "scope": "/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZ_RG_NAME }}/providers/Microsoft.ApiManagement/service/${{ env.AZ_APIM_NAME }}/apis/myfirstproject-webapi",
                      "displayName": "myfirstproject-subscription",
                      "state": "active"
                    }
                  }'
