name: dotnetcore-webapp-delete-environment

on:
  workflow_dispatch:

jobs:
  Common:
    runs-on: ubuntu-latest
    steps:
    - name: Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
    
    - name: Delete Resource Group
      run: |
        if [ $(az group exists --name rg-dotnetproject) = true ]; then
          az group delete --name rg-dotnetproject --yes
        else
            echo "Resource group not exists"
        fi

  Dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.ORG_AZ_CREDENTIALS }}

    - name: Delete Resource Group
      run: |
        if [ $(az group exists --name rg-dotnetproject-dev) = true ]; then
          az group delete --name rg-dotnetproject-dev --yes
        else
            echo "Resource group not exists"
        fi
      
  Hml:
    runs-on: ubuntu-latest
    steps:
    - name: Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
    
    - name: Delete Resource Group
      run: |
        if [ $(az group exists --name rg-dotnetproject-hml) = true ]; then
          az group delete --name rg-dotnetproject-hml --yes
        else
            echo "Resource group not exists"
        fi
      
  Prd:
    runs-on: ubuntu-latest
    steps:
    - name: Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
    
    - name: Delete Resource Group
      run: |
        if [ $(az group exists --name rg-dotnetproject-prd) = true ]; then
          az group delete --name rg-dotnetproject-prd --yes
        else
            echo "Resource group not exists"
        fi
  
  Purge-Apim:
    runs-on: ubuntu-latest
    needs:
      - Common
      - Dev
      - Hml
      - Prd
    steps:
    - name: Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
    
    - name: List and Delete APIM Soft-Deleted Instances
      run: |
        # Listar instâncias soft-deleted
        response=$(az rest --method GET --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/providers/Microsoft.ApiManagement/deletedservices?api-version=2021-08-01")
    
        # Processar cada instância soft-deleted
        echo "$response" | jq -c '.value[] | {name: .name, location: .location}' | while read -r item; do
            # Extrair nome e localização
            name=$(echo $item | jq -r '.name')
            location=$(echo $item | jq -r '.location')
    
            # Exibir nome e localização
            echo "Deleting APIM instance: $name in location: $location"
    
            # Deletar instância
            az rest --method DELETE --url "https://management.azure.com/subscriptions/${{ secrets.ORG_AZ_SUBSCRIPTION_ID }}/providers/Microsoft.ApiManagement/locations/${location}/deletedservices/${name}?api-version=2021-08-01"
        done