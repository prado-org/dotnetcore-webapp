name: dotnetcore-webapp-ci-cd

run-name: ${{ github.actor }} - ${{ github.ref_name }} - dotnetcore

on:
  push:
    branches:
      - feature/*
      - release/*
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write
  contents: write
  statuses: write
  checks: write
  actions: write    
  security-events: write
  
env:
  CONFIGURATION: Release
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

    - name: Show variables
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_SHA: $GITHUB_SHA"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "GITHUB_ACTION: $GITHUB_ACTION"
        echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
        echo "RUNNER_OS: $RUNNER_OS"
        echo "RUNNER_TOOL_CACHE: $RUNNER_TOOL_CACHE"
        echo "RUNNER_TEMP: $RUNNER_TEMP"
        echo "RUNNER_WORKSPACE: $RUNNER_WORKSPACE"
        echo "ACTIONS_RUNTIME_URL: $ACTIONS_RUNTIME_URL"

    - name: Setup dotnet version
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
        #queries: security-extended,security-and-quality
        queries: security-extended

    - name: Restore dependencies
      run: dotnet restore src/MyFirstProject.sln
    
    - name: Build
      run: dotnet build src/MyFirstProject.sln --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Test
      run: dotnet test src/MyFirstProject.Tests/MyFirstProject.Tests.csproj --no-build --configuration ${{ env.CONFIGURATION }} --verbosity normal --logger "junit;LogFilePath=TestResults/tests.xml"
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:csharp"
    
    - name: Create test summary
      uses: test-summary/action@v2
      if: success() || failure()
      with:
        paths: src/MyFirstProject.Tests/TestResults/tests.xml

    #- name: Test Report
    #  uses: dorny/test-reporter@v1
    #  if: success() || failure()
    #  with:
    #    name: UnitTests
    #    path: src/MyFirstProject.Tests/TestResults/tests.xml
    #    reporter: java-junit
    
    - name: Publish MyFirstProject.WebApp.csproj
      run: dotnet publish src/MyFirstProject.WebApp/MyFirstProject.WebApp.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishApp

    - name: Publish MyFirstProject.TodoApi
      run: dotnet publish src/MyFirstProject.TodoApi/MyFirstProject.TodoApi.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishTodoApi
    
    - name: Publish MyFirstProject.WeatherForecastApi
      run: dotnet publish src/MyFirstProject.WeatherForecastApi/MyFirstProject.WeatherForecastApi.csproj --no-build --configuration ${{ env.CONFIGURATION }} --output PublishWeatherForecastApi
    
    - name: Zip WebApp
      run: |
        cd ${{ github.workspace }}/PublishApp
        zip -r PublishApp.zip .
    
    - name: Zip TodoApi
      run: |
        cd ${{ github.workspace }}/PublishTodoApi
        zip -r PublishTodoApi.zip .
    
    - name: Zip WeatherForecastApi
      run: |
        cd ${{ github.workspace }}/PublishWeatherForecastApi
        zip -r PublishWeatherForecastApi.zip .
      
    - name: Upload WebApp Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-artifact
        path: PublishApp/PublishApp.zip
    
    - name: Upload TodoApi Artifact
      uses: actions/upload-artifact@v4
      with:
        name: todo-api-artifact
        path: PublishTodoApi/PublishTodoApi.zip
    
    - name: Upload WeatherForecastApi Artifact
      uses: actions/upload-artifact@v4
      with:
        name: weather-api-artifact
        path: PublishWeatherForecastApi/PublishWeatherForecastApi.zip
      
  Dev:
    needs: 
      - Build
    runs-on: ubuntu-latest
    environment:
      name: webapp-dev
      url: https://app-dotnetproject-dev.azurewebsites.net
    if: ${{ startsWith(github.ref, 'refs/heads/feature/') }}
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy TodoApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-dev
          app-name: api-todo-dev
          package: "todo-api-artifact/PublishTodoApi.zip"
      
      - name: Deploy WeatherForecastApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-dev
          app-name: api-weatherforecast-dev
          package: "weather-api-artifact/PublishWeatherForecastApi.zip"
    
      - name: Deploy WebApp
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-dev
          app-name: app-dotnetproject-dev
          package: "app-artifact/PublishApp.zip"
      
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: app-dotnetproject-dev
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Todo",
                "value": "https://api-todo-dev.azurewebsites.net",
                "slotSetting": false
              },
              {
                "name": "Api__WeatherForecast",
                "value": "https://api-weatherforecast-dev.azurewebsites.net",
                "slotSetting": false
              }
            ]

      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: api-todo-dev
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]

  Hml:
    needs: 
      - Build
    runs-on: ubuntu-latest
    environment:
      name: webapp-hml
      url: https://app-dotnetproject-hml.azurewebsites.net
    if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy TodoApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-hml
          app-name: api-todo-hml
          package: "todo-api-artifact/PublishTodoApi.zip"
      
      - name: Deploy WeatherForecastApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-hml
          app-name: api-weatherforecast-hml
          package: "weather-api-artifact/PublishWeatherForecastApi.zip"
        
      - name: Deploy WebApp
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-hml
          app-name: app-dotnetproject-hml
          package: app-artifact/PublishApp.zip
          
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: app-dotnetproject-hml
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Todo",
                "value": "https://api-todo-hml.azurewebsites.net",
                "slotSetting": false
              },
              {
                "name": "Api__WeatherForecast",
                "value": "https://api-weatherforecast-hml.azurewebsites.net",
                "slotSetting": false
              }
            ]
      
      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: api-todo-hml
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]

  Prd:
    needs: 
      - Hml
    runs-on: ubuntu-latest
    environment:
      name: webapp-prd
      url: https://app-dotnetproject-prd.azurewebsites.net
    steps:
      - uses: actions/download-artifact@v4

      - name: Display Folder
        run: ls -R
      
      - name: Set version date
        run: |
          echo "APP_VERSION_DATE=$(date +'%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV
          
      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.ORG_AZ_CREDENTIALS }}
      
      - name: Deploy TodoApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-prd
          app-name: api-todo-prd
          package: "todo-api-artifact/PublishTodoApi.zip"
      
      - name: Deploy WeatherForecastApi
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-prd
          app-name: api-weatherforecast-prd
          package: "weather-api-artifact/PublishWeatherForecastApi.zip"

      - name: Deploy WebApp
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: rg-dotnetproject-prd
          app-name: app-dotnetproject-prd
          package: app-artifact/PublishApp.zip
          
      - name: Set APP Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: app-dotnetproject-prd
          app-settings-json: |
            [
              {
                "name": "VersionInfo__Number",
                "value": "1.0.${{ github.run_number }}",
                "slotSetting": false
              },
              {
                "name": "VersionInfo__Date",
                "value": "${{ env.APP_VERSION_DATE }}",
                "slotSetting": false
              },
              {
                "name": "Api__Todo",
                "value": "https://api-todo-prd.azurewebsites.net",
                "slotSetting": false
              },
              {
                "name": "Api__WeatherForecast",
                "value": "https://api-weatherforecast-prd.azurewebsites.net",
                "slotSetting": false
              }
            ]

      - name: Set API Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: api-todo-prd
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "${{ secrets.SQL_CONN_STRING }}",
                "slotSetting": false
              }
            ]
